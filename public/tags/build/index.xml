<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>build on Codifice</title>
    <link>https://codifice.uk/tags/build/</link>
    <description>Recent content in build on Codifice</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 24 Jun 2010 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://codifice.uk/tags/build/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MSBuild: Reliably Retrieving the Assembly Version (without locking the file!)</title>
      <link>https://codifice.uk/posts/2010-06-24-msbuild-reliably-retrieving-assembly/</link>
      <pubDate>Thu, 24 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-06-24-msbuild-reliably-retrieving-assembly/</guid>
      <description>Iâ€™ve recently had to look at dynamically assigning an assembly versions based in part on the date of compilation and the version of a compiled 3rd Party library.
This looked like a simple job for the MSBuild.ExtensionPack.Framework.Assembly task in the MSBuild Extension Pack.&amp;nbsp; However, this had a serious downside it locked the Assembly for the duration of the build!.&amp;nbsp; Erkk.
This is the Devil Line that causes the problem:
1: protected override void InternalExecute()  2: {  3: // Implementation ommitted  4: this.</description>
    </item>
    
  </channel>
</rss>