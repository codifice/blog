<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>localization on Codifice</title>
    <link>https://codifice.uk/tags/localization/</link>
    <description>Recent content in localization on Codifice</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 27 Jul 2010 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://codifice.uk/tags/localization/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ektron: SQL Script To Clone A Menu into Multiple Languages</title>
      <link>https://codifice.uk/posts/2010-07-27-ektron-sql-script-to-clone-menu-into/</link>
      <pubDate>Tue, 27 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-07-27-ektron-sql-script-to-clone-menu-into/</guid>
      <description>I’ve recently needed to have a multilingual menu where the id for each menu item is the same across all languages, this is a bit of a tall order using the workarea as only the root menu item will share the id.
So I’ve knocked out a quick’n’dirty TSQL script to clone a menu across across several languages whilst maintaining the relevant ids.
1: BEGIN TRANSACTION  2:&amp;nbsp;   3: CREATE TABLE #NewMenu (  4: [mnu_id] [bigint] NOT NULL,  5: [mnu_name] [nvarchar](255) NULL,  6: [mnu_description] [nvarchar](255) NULL,  7: [folder_id] [bigint] NOT NULL,  8: [recursive] [int] NOT NULL,  9: [user_id] [bigint] NULL,  10: [date_created] [datetime] NOT NULL,  11: [last_edit_date] [datetime] NULL,  12: [last_edit_lname] [nvarchar](50) NOT NULL,  13: [last_edit_fname] [nvarchar](50) NOT NULL,  14: [mnu_type] [int] NOT NULL,  15: [mnu_link] [nvarchar](255) NULL,  16: [template_link] [nvarchar](255) NULL,  17: [parent_id] [bigint] NULL,  18: [ancestor_id] [bigint] NULL,  19: [content_language] [int] NOT NULL,  20: [mnu_image] [nvarchar](512) NULL,  21: [mnu_image_override] [int] NULL,  22: [mnu_to_folders] [nvarchar](512) NULL,  23: [mnu_to_templates] [nvarchar](255) NULL,  24: [dynamic_replication_method] [int] NULL)  25: GO  26:&amp;nbsp;   27: WITH MenuCTE AS (  28: SELECT *  29: FROM [dbo].</description>
    </item>
    
    <item>
      <title>Convert Accented Characters to Simple Characters</title>
      <link>https://codifice.uk/posts/2010-06-28-convert-accented-characters-to-simple/</link>
      <pubDate>Mon, 28 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-06-28-convert-accented-characters-to-simple/</guid>
      <description>I recently needed a way to replace accented characters with simple english ones to allow more readable friendly urls. I&#39;m sure there are plenty of Danes out there who are sick of seeing their language butchered by UrlEncode.&amp;nbsp; After bit of reading up, it seems .Net 2.0 does 99% of the heavy lifting for you:
1: //using System.Text;  2:&amp;nbsp;   3: /// &amp;lt;summary&amp;gt;  4: /// Replaces Accented Characters with Closest Equivalents  5: /// &amp;lt;/summary&amp;gt;  6: /// &amp;lt;param name=&#34;</description>
    </item>
    
    <item>
      <title>Ektron 8.01: PlatformNotSupportedException – Tracking Down and Fixing Another Multilingual Gotcha!</title>
      <link>https://codifice.uk/posts/2010-06-15-ektron-801-platformnotsupportedexceptio/</link>
      <pubDate>Tue, 15 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-06-15-ektron-801-platformnotsupportedexceptio/</guid>
      <description>I’m still tracing though issues after upgrading to 8.01, this time looking at why requests for static files are return 500 - Internal Server Errors when French is selected, but not English. Hmm.
Looking at the Event Logs shows lots of errors like this:
1: Exception type: PlatformNotSupportedException   2:&amp;nbsp;   3: Exception message: The DefaultHttpHandler.BeginProcessRequest method is not   4: supported by IIS integrated pipeline mode.    This is telling me that I’m trying to serve a file via the IIS 7 Integrated Pipeline using a handler that’s specifically designed for IIS 6 (or IIS Classic Pipeline).</description>
    </item>
    
    <item>
      <title>Educating Clients About The Way the Web Works</title>
      <link>https://codifice.uk/posts/2010-04-05-educating-clients-about-way-web-works/</link>
      <pubDate>Mon, 05 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-04-05-educating-clients-about-way-web-works/</guid>
      <description>Craig’s pointed out an interesting discussion about managing client expectations (that kicked off from a very preachy design article) around the final display of a website across browsers.&amp;nbsp;&amp;nbsp; This sort of discussion has been around for a while now and I think clients are starting to wise up to browser display issues.
Personally, I’m fairly indifferent about how most websites look provided they behave as I expect don’t actively get in my way.</description>
    </item>
    
  </channel>
</rss>