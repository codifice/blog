<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>csharp on Codifice</title>
    <link>https://codifice.uk/tags/csharp/</link>
    <description>Recent content in csharp on Codifice</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 04 Aug 2011 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://codifice.uk/tags/csharp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ektron: Treating Office Files as Normal DMS Assets</title>
      <link>https://codifice.uk/posts/2011-08-04-ektron-treating-office-files-as-normal/</link>
      <pubDate>Thu, 04 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2011-08-04-ektron-treating-office-files-as-normal/</guid>
      <description>One of the features of Ektron is tight office integration allowing the editing of office files directly from the workarea.&amp;nbsp; However, in some circumstances you may want to treat these as normal DMS assets (like PDF files) as their the end results of an offline publishing process.
The Ektron support fix for this is to modify the workarea files (detailed below), which would then need to be re-applyed with every upgrade.</description>
    </item>
    
    <item>
      <title>Experiments with ADO.Net, Extension Methods and Anonymous Methods</title>
      <link>https://codifice.uk/posts/2011-07-14-experiments-with-adonet-extension/</link>
      <pubDate>Thu, 14 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2011-07-14-experiments-with-adonet-extension/</guid>
      <description>As much as at pains me to admit it, an ORM Framework is not the answer to all data access problems.&amp;nbsp; Sometimes the quickest, easiest and most maintainable approach is back-to-basics flat ADO.Net.&amp;nbsp; For those developers whose (development) life began with Entity Framework, NHibernate or SubSonic.&amp;nbsp; This is a fairly typical example of an ADO.Net method (in a well structured code base):
1: private static IEnumerable&amp;lt;ContentAwaitingApproval&amp;gt; GetPendingApprovals(long approvalGroupId)  2: {  3: List&amp;lt;ContentAwaitingApproval&amp;gt; approvals = new List&amp;lt;ContentAwaitingApproval&amp;gt;();  4: using (SqlConnection conn = new SqlConnection(ConfigurationManager.</description>
    </item>
    
    <item>
      <title>Base26 Number Encoding/Generate Excel Columns</title>
      <link>https://codifice.uk/posts/2011-05-02-base26-number-encodinggenerate-excel/</link>
      <pubDate>Mon, 02 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2011-05-02-base26-number-encodinggenerate-excel/</guid>
      <description>Ever needed to convert an Excel Column Letter to a number or vice versa?&amp;nbsp; Here’s a couple of extension methods to do it:
1: public static string ToLetterEncoded(this Int32 numberToEncode)  2: {  3: if (numberToEncode &amp;lt;= 0) throw new ArgumentOutOfRangeException(&#34;numberToEncode&#34;, numberToEncode, &#34;Value must be greater than zero&#34;);  4: numberToEncode--;  5: if (numberToEncode &amp;gt;= 0 &amp;amp;&amp;amp; numberToEncode &amp;lt; 26)  6: return ((char)(&#39;A&#39; + numberToEncode)).ToString();  7: else  8: return ToLetterEncoded(numberToEncode / 26) + ToLetterEncoded(numberToEncode % 26 + 1);  9: }   1: public static Int32 FromLetterEncodedInt32(this string letterEncodedNumber)  2: {  3: if (letterEncodedNumber.</description>
    </item>
    
    <item>
      <title>EKTRON: Diagnosing 8.0 Extension Strategy Loading Failures</title>
      <link>https://codifice.uk/posts/2010-11-18-ektron-diagnosing-80-extension-strategy/</link>
      <pubDate>Thu, 18 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-11-18-ektron-diagnosing-80-extension-strategy/</guid>
      <description>I’ve recently hit a problem with deploying&amp;nbsp; Ektron Extensions (the 8.0 replacement for Plugins), essentially every time my Extension ‘Strategy’ was called the workarea would display an error similar to:
 Value cannot be null. Parameter name: type 
 Fortunately, in the Application Event log (for the CMS400 Source) there’s a bit more information:
1: Timestamp: 18/11/2010 18:43:01  2: Message: Could not load the MartinOnDotNet.Helpers.Ektron.Extensions.Monitoring.UserMonitoringStrategy, MartinOnDotNet.Helpers.Ektron.Extensions.Monitoring implementation from the configuration file  3: Category: Error  4: Priority: -1  5: EventId: 0  6: Severity: Error   This shows that the declaration in the web.</description>
    </item>
    
    <item>
      <title>Performance: Applying Output Cache Policies to a User Controls</title>
      <link>https://codifice.uk/posts/2010-11-03-performance-applying-output-cache/</link>
      <pubDate>Wed, 03 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-11-03-performance-applying-output-cache/</guid>
      <description>One of the great features in ASP.NET is the rich caching framework.&amp;nbsp; I particularly like being able to:
 Define caching policies in the configuration file and then assigning those policies to groups of pages (via the @@OutputCache directive).  Cache User Control output for reuse on multiple pages (Partial Page Caching)   What I don’t like is the fact that you can’t combine the two!&amp;nbsp; You have to hard code your user control cache directives either in the mark-up (as @@OutputCache directive) or by applying an attribute (System.</description>
    </item>
    
    <item>
      <title>Security: Protect against POET Attacks with Custom Errors!</title>
      <link>https://codifice.uk/posts/2010-09-20-security-protect-against-poet-attacks/</link>
      <pubDate>Mon, 20 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-09-20-security-protect-against-poet-attacks/</guid>
      <description>There’s been a big deal made of a serious security flaw in ASP.Net which potentially affects a lot of .Net sites, that allows a 3rd Party to trick ASP.Net into serving sensitive files within a web application folder.&amp;nbsp; Microsoft have released official advise on how to temporarily patch the problem which revolves around forcing Error&amp;nbsp; and Page Not found pages to return the same status page.&amp;nbsp; This would need to stay in place until a permanent fix is released.</description>
    </item>
    
    <item>
      <title>Yummy! Cleaner, sweeter WCF proxy usage with DynamicTidyProxy!</title>
      <link>https://codifice.uk/posts/2010-09-05-yummy-cleaner-sweeter-wcf-proxy-usage/</link>
      <pubDate>Sun, 05 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-09-05-yummy-cleaner-sweeter-wcf-proxy-usage/</guid>
      <description>This is a follow up to my previous (in fact my first) post “Mmmmm… clean, sweet WCF proxy usage with TidyProxy!”, which showed how to safely use an arbitrary WCF proxy class safely.&amp;nbsp; 
A substantial part of my day-to-day development is working with WCF services, mainly web and MSMQ and after a few teething troubles everything’s been ticking along nicely.&amp;nbsp; Generally these are internal windows-&amp;gt;web comm’s where I can control both client and server implementations, so lots of shared types.</description>
    </item>
    
    <item>
      <title>HowTo: Creating Strongly Typed Code Using Microsoft.VisualBasic.Collection</title>
      <link>https://codifice.uk/posts/2010-08-18-howto-creating-strongly-typed-code/</link>
      <pubDate>Wed, 18 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-08-18-howto-creating-strongly-typed-code/</guid>
      <description>One of the 3rd Party CMS’s that I frequently work with (Ektron) has a lot of legacy API code that uses Microsoft.VisualBasic.Collections ( from hereon referred to as Collection) to pass data into the database.&amp;nbsp; These API’s methods are slowly being replaced with strongly typed entity style methods, but the most stable and reliable methods use Collections.
There are many reasons to dislike Collections, but my top ones are:
 You can’t see the key’s of the values inside – this often leads to Exception led logic  Weakly Typed   What’s in the Box?</description>
    </item>
    
    <item>
      <title>Building a Better FindControl</title>
      <link>https://codifice.uk/posts/2010-08-03-building-better-findcontrol/</link>
      <pubDate>Tue, 03 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-08-03-building-better-findcontrol/</guid>
      <description>There are times in any semi-advanced ASP.NET developers life when they’re working with databound templated controls (such as the Repeater) and they need to find a control without knowing where it is, or even if its there.
Normally, you’re reduced to using the standard FindControl method available on any control.&amp;nbsp; But this only finds controls with a given id within the same NamingContainer.&amp;nbsp; I’ve written some extension methods to try and get around the (many) issues that I’ve had with FindControl and hopefully people will find them useful.</description>
    </item>
    
    <item>
      <title>Changing A Master Page Body Tag’s CSS Class For Different Content Pages</title>
      <link>https://codifice.uk/posts/2010-07-20-changing-master-page-body-tags-css/</link>
      <pubDate>Tue, 20 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-07-20-changing-master-page-body-tags-css/</guid>
      <description>It seems a bit of a failing of Master Pages that there’s no clear way to assign different CSS classes to the ‘body’ tag based on the Content Page.&amp;nbsp; To get around this, I’ve taken to inheriting all of my content pages from a known base class (which in turn inherits from System.Web.Page) and then giving it a publically accessible property of ‘BodyCssClass’!
1: namespace MartinOnDotNet.MasterPageBodyClass  2: {  3: public class BasePage : System.</description>
    </item>
    
    <item>
      <title>TIP: How to Handle Form Postbacks when Url Rewriting</title>
      <link>https://codifice.uk/posts/2010-07-15-tip-how-to-handle-form-postbacks-when/</link>
      <pubDate>Thu, 15 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-07-15-tip-how-to-handle-form-postbacks-when/</guid>
      <description>Url Rewriting is great and I love it a lot, you get to create nice readable (and memorable) urls without having to create hundred of files.&amp;nbsp; However, there can be issues.&amp;nbsp; For example, when you post back to a page where the url has been rewritten, it won’t be to the nice alias, it will be to the direct page.aspx?id=blah location.&amp;nbsp; Which is a bit nasty.
To stop this, I make use of a Control Adapters which alters the rendering logic of the HtmlForm control on every ASP.</description>
    </item>
    
    <item>
      <title>TIP: Improve Readability with Shorter String.Format Statements</title>
      <link>https://codifice.uk/posts/2010-07-01-tip-improve-readability-with-shorter/</link>
      <pubDate>Thu, 01 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-07-01-tip-improve-readability-with-shorter/</guid>
      <description>String.Format is a wonderful method, a real life saver when it comes to producing (readable) formatted text from within code.&amp;nbsp; I use it everywhere, but it gets a bit tedious typing the same boilerplate code to use it properly:
1: string formatted = string.Format(CultureInfo.InvariantCulture, &#34;Formatted text {0:-15} example generated on {1:d}&#34;, meaningfulString, DateTime.Now);   

That “string.Format(CultureInfo.InvariantCulture,” over 40 characters before you get the meat of the statement.&amp;nbsp; Sure you can drop the invariant culture bit but then you can introduce weird formatting problems on different machines….</description>
    </item>
    
    <item>
      <title>Convert Accented Characters to Simple Characters</title>
      <link>https://codifice.uk/posts/2010-06-28-convert-accented-characters-to-simple/</link>
      <pubDate>Mon, 28 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-06-28-convert-accented-characters-to-simple/</guid>
      <description>I recently needed a way to replace accented characters with simple english ones to allow more readable friendly urls. I&#39;m sure there are plenty of Danes out there who are sick of seeing their language butchered by UrlEncode.&amp;nbsp; After bit of reading up, it seems .Net 2.0 does 99% of the heavy lifting for you:
1: //using System.Text;  2:&amp;nbsp;   3: /// &amp;lt;summary&amp;gt;  4: /// Replaces Accented Characters with Closest Equivalents  5: /// &amp;lt;/summary&amp;gt;  6: /// &amp;lt;param name=&#34;</description>
    </item>
    
    <item>
      <title>MSBuild: Reliably Retrieving the Assembly Version (without locking the file!)</title>
      <link>https://codifice.uk/posts/2010-06-24-msbuild-reliably-retrieving-assembly/</link>
      <pubDate>Thu, 24 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-06-24-msbuild-reliably-retrieving-assembly/</guid>
      <description>I’ve recently had to look at dynamically assigning an assembly versions based in part on the date of compilation and the version of a compiled 3rd Party library.
This looked like a simple job for the MSBuild.ExtensionPack.Framework.Assembly task in the MSBuild Extension Pack.&amp;nbsp; However, this had a serious downside it locked the Assembly for the duration of the build!.&amp;nbsp; Erkk.
This is the Devil Line that causes the problem:
1: protected override void InternalExecute()  2: {  3: // Implementation ommitted  4: this.</description>
    </item>
    
    <item>
      <title>TIP: How to Debug Windows Services and Plugins</title>
      <link>https://codifice.uk/posts/2010-06-23-tip-how-to-debug-windows-services-and/</link>
      <pubDate>Wed, 23 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-06-23-tip-how-to-debug-windows-services-and/</guid>
      <description>If you’ve ever had to create an component hosted inside a 3rd Party application (such as a plugin or windows service), you’ll know that it can be pretty tricky to get the debugger attached to the process quickly and reliably.&amp;nbsp; Here’s a snippet that’s I’ve taken from project to project:
1: #if DEBUG  2: if (Properties.Settings.Default.LaunchDebugger  3: &amp;amp;&amp;amp; !System.Diagnostics.Debugger.IsAttached) System.Diagnostics.Debugger.Launch();  4: #endif   
This is statement checks to see if launching the debugger is allowed (using the standard settings classes) and launches the debugger if one isn’t already attached.</description>
    </item>
    
    <item>
      <title>Tip: Constructing Private Types</title>
      <link>https://codifice.uk/posts/2010-06-16-tip-constructing-private-types/</link>
      <pubDate>Wed, 16 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-06-16-tip-constructing-private-types/</guid>
      <description>I recently needed to create an instance of the System.Web.StaticFileHandler.&amp;nbsp; This is a bit difficult as the class is internal so reflection must be used:
1: private static IHttpHandler _staticFileHandler;  2:&amp;nbsp;   3: private static IHttpHandler StaticFileHandler  4: {  5: get  6: {  7: if (_staticFileHandler == null)  8: {  9: Assembly systemWeb = typeof(IHttpHandler).Assembly;  10: /* If you don&#39;t have a public type to reference a lookup like this could be done  11: Assembly systemWeb = AppDomain.</description>
    </item>
    
    <item>
      <title>N2CMS Templates RSS Feed Fix</title>
      <link>https://codifice.uk/posts/2010-06-10-n2cms-templates-rss-feed-fix/</link>
      <pubDate>Thu, 10 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-06-10-n2cms-templates-rss-feed-fix/</guid>
      <description>N2CMS comes with some pretty fully featured examples, the most useful to me is the N2.Templates example site.&amp;nbsp; Unfortunately, as it stands the RSS feed is broken and give the error:
Cannot use filters when using MaxResults, sorry. Fortunately a fix can be found the N2.Templates.Mvc project, you just need to replace the following functions in N2.Templates.Items.RssFeed :
1: public virtual IEnumerable&amp;lt;ISyndicatable&amp;gt; GetItems()  2: {  3: foreach (ISyndicatable item in N2.</description>
    </item>
    
    <item>
      <title>N2CMS Forum Addon: Fixing the Theme</title>
      <link>https://codifice.uk/posts/2010-06-09-n2cms-forum-addon-fixing-theme/</link>
      <pubDate>Wed, 09 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-06-09-n2cms-forum-addon-fixing-theme/</guid>
      <description>My work on the VWT2OC site is on hiatus at the moment due to hosting issues so I thought I’d blog a useful fix that I’ve found.
I’ve noticed a bug with the Forum Addon.&amp;nbsp; The first page would be correctly themed but any subsequent pages were not when running against a build of the latest N2CMS.
On investigation it seems that the Forum Pages CurrentItem was resolving to null which prevented the ThemeConcern for assigning the correct theme:</description>
    </item>
    
    <item>
      <title>N2CMS Meet VWT2OC: Day 2 – N2CMS Configuration</title>
      <link>https://codifice.uk/posts/2010-06-07-n2cms-meet-vwt2oc-day-2-n2cms/</link>
      <pubDate>Mon, 07 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-06-07-n2cms-meet-vwt2oc-day-2-n2cms/</guid>
      <description>Yesterday went well and I’ve now got the basic N2CMS install working and the Forum Addon has been installed, so my objectives for today are:
 Day 2 – N2CMS Configuration  Integrate the Membership Provider from n2cms/forum/legacy vwt2oc  Construct basic site structure (homepage/articles/forum/gallery/events calendar/etc)  Create VWT2OC basic theme     Integrating the Membership Provider One of the first tasks I need to undertake is integrating the underlying security model.</description>
    </item>
    
    <item>
      <title>N2CMS Meet VWT2OC: Day 1 – Project Setup</title>
      <link>https://codifice.uk/posts/2010-06-06-n2cms-meet-vwt2oc-day-1-project-setup/</link>
      <pubDate>Sun, 06 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-06-06-n2cms-meet-vwt2oc-day-1-project-setup/</guid>
      <description>It’s on!&amp;nbsp; I’ve got 8 days to overhaul the Volkswagen Type 2 Owners Club (www.vwt2oc.com) before work beckons again….&amp;nbsp; A month ago I decided to rebuild the existing website using n2cms.&amp;nbsp; Unfortunately, in that time when I was going to research best practise and get some test sites working….I’ve done nothing.&amp;nbsp; So, I’ve decided to incentivise myself by blogging my progress….
My Basic Plan of Action is:
 Day 1 – Project Setup  SVN Configuration  Create Build Script to compile N2CMS for project  Integrate Forum Add On with n2cms    Day 2 – N2CMS Configuration  Integrate the Membership Provider from n2cms/forum/legacy vwt2oc  Construct basic site structure (homepage/articles/forum/gallery/events calendar/etc)  Create VWT2OC basic theme    Day 3 – VWT2OC Membership Model  Implement Club Member/Membership Data Model in n2cms  Basic Admin Screens for Members  Initial member import routine from current site    Day 4 – My Account and Personalization  Improve member import routine  Membership Reports/Maintenance from with N2CMS  Initial ‘My Account’ page for front end    Day 5 – End User Approval/eCommerce  Deploy to temporary hosted location for client approval of WIP  Import Membership Purchasing Mechanism for legacy app  Integrate NoChex/Paypal payment gateways    Day 6 – Review of Progress  Review functionality and prioritise urgent issues with work so far    Day 7 + 8 – Getting a functional site   Ha!</description>
    </item>
    
    <item>
      <title>Taking Control of Your Control Adapters</title>
      <link>https://codifice.uk/posts/2010-05-23-taking-control-of-your-control-adapters/</link>
      <pubDate>Sun, 23 May 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-05-23-taking-control-of-your-control-adapters/</guid>
      <description>I was recently put in a difficult position when I was attempting to integrate some of our reliable, established Control Adapters into a new Ektron project.&amp;nbsp;&amp;nbsp; When the Ektron workarea controls were ‘adapted’ (in this case a checkbox) it broke some supporting JQuery statements.&amp;nbsp; So the quandary I found my self in was, so I amend the workarea code to add the control attribute to ‘opt-out’ of using the adapter, or modify the control adapters (and all of their dependent projects) to use an ‘opt-in’ attribute instead?</description>
    </item>
    
    <item>
      <title>Basic Example of On-The-Fly Config Section Encryption</title>
      <link>https://codifice.uk/posts/2010-05-13-basic-example-of-on-fly-config-section/</link>
      <pubDate>Thu, 13 May 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-05-13-basic-example-of-on-fly-config-section/</guid>
      <description>I recently answered a question about how you could securely modify a value within an encrypted configuration website without having to create a duplicate config file.&amp;nbsp; Well, the answer’s pretty simple and straightforward – just use the API!
A quick example page could be:
1: &amp;lt;%@@ Page Language=&#34;C#&#34; AutoEventWireup=&#34;true&#34; CodeFile=&#34;Default.aspx.cs&#34; Inherits=&#34;_Default&#34; %&amp;gt;  2:&amp;nbsp;   3: &amp;lt;!DOCTYPE html PUBLIC &#34;-//W3C//DTD XHTML 1.0 Transitional//EN&#34; &#34;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#34;&amp;gt;  4: &amp;lt;html xmlns=&#34;http://www.w3.org/1999/xhtml&#34;&amp;gt;  5: &amp;lt;head runat=&#34;</description>
    </item>
    
    <item>
      <title>N2CMS Meet VWT2OC: Project History</title>
      <link>https://codifice.uk/posts/2010-05-10-n2cms-meet-vwt2oc-project-history/</link>
      <pubDate>Mon, 10 May 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-05-10-n2cms-meet-vwt2oc-project-history/</guid>
      <description>Many moons ago (~3 years) I did a bit of family rate development to create a simple website for the Volkswagen Type 2 Owners Club – www.vwt2oc.com.&amp;nbsp; The brief was fairly sparse on detail, they needed a website to manage their memberships and take orders online, a few content manages pages and a basic forum to take over from their previous mainly static site that was looking a little long in the tooth.</description>
    </item>
    
    <item>
      <title>Using MbUnit StaticTestFactory to Validate Sitemap.xml Links</title>
      <link>https://codifice.uk/posts/2010-05-05-using-mbunit-statictestfactory-to/</link>
      <pubDate>Wed, 05 May 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-05-05-using-mbunit-statictestfactory-to/</guid>
      <description>I’ve been investigating a replacement for our current link checker (SEO Optimization Toolkit) to be run automatically as part of our build so that we can get a quick heads up if one of our dynamic pages breaks.&amp;nbsp; The problem is that as most of our sites are built with Ektron there’s a lot of potential for a combination of content and code to break individual pages that share a template with working pages.</description>
    </item>
    
    <item>
      <title>Enabling Concurrent Logins in Ektron</title>
      <link>https://codifice.uk/posts/2010-04-16-enabling-concurrent-logins-in-ektron/</link>
      <pubDate>Fri, 16 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-04-16-enabling-concurrent-logins-in-ektron/</guid>
      <description>For one of our major clients we needed a semi-secure area – you needed credentials to view the content within, but there was only one set of credentials.&amp;nbsp;&amp;nbsp; This meant that multiple users could access the site concurrently with the same credentials and this is a bit of a problem for the Ektron security model as it’s based around a one session per login model.
This model is enforced by a unique integer that is generated on login and persisted in the database (in [dbo].</description>
    </item>
    
    <item>
      <title>Secure Your Website, Put Bouncers at the Door (Part 3)</title>
      <link>https://codifice.uk/posts/2010-04-08-secure-your-website-put-bouncers-at_08/</link>
      <pubDate>Thu, 08 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-04-08-secure-your-website-put-bouncers-at_08/</guid>
      <description>In part 1, I gave an overview of the similarities in securing a good night club and a website and in part 2 I gave an overview of what we, as developers, can do to secure our websites.&amp;nbsp; In this final part, I give details on how we should be doing the most important (and mundane) part of securing our websites:
 1. Input Validation (Continued) One important fact that many web developers fail to take on board, is that everything you receive from the client is a string; Query strings, post back values and cookies.</description>
    </item>
    
    <item>
      <title>Secure Your Website, Put Bouncers at the Door (Part 2)</title>
      <link>https://codifice.uk/posts/2010-04-06-secure-your-website-put-bouncers-at_06/</link>
      <pubDate>Tue, 06 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-04-06-secure-your-website-put-bouncers-at_06/</guid>
      <description>In part 1, I gave an overview of the similarities in securing a good night club and a website.&amp;nbsp;&amp;nbsp; In this part I’ll give an overview of what we as developers can do to implement these measures:
 4 and 5 Authentication and HTTPS The implementation of these is very much driven by the business requirements of the site, if the site’s free to access and there’s no personal information they’re a non-issue.</description>
    </item>
    
    <item>
      <title>Secure Your Website, Put Bouncers at the Door (Part 1)</title>
      <link>https://codifice.uk/posts/2010-04-04-secure-your-website-put-bouncers-at/</link>
      <pubDate>Sun, 04 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-04-04-secure-your-website-put-bouncers-at/</guid>
      <description>A good website is much like a nightclub, we want the general population to be able to use the facilities freely (or for a nominal fee!) but we don’t want the trouble makers that will spoil it for everyone.&amp;nbsp;&amp;nbsp; Pushing the analogy further, nightclubs have a few different types of security in place:
  Visibility Implementation Mitigates   High Profile Bouncers  Filter out trouble makers at point of entry    &amp;nbsp; Internal Security Eject people that become troublemakers   Low Profile Bars on Windows Alarmed Exits Prevent people sneaking in   &amp;nbsp; Metal Detectors Security Cameras Passively check for people about to cause trouble   As web developers we have a very similar set of tools that we can use to secure our website:</description>
    </item>
    
    <item>
      <title>Ektron and Web Application Projects (Part 2)</title>
      <link>https://codifice.uk/posts/2010-03-24-ektron-and-web-application-projects/</link>
      <pubDate>Wed, 24 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-03-24-ektron-and-web-application-projects/</guid>
      <description>In Part 1, I discussed why you might want to develop your website outside of the default Ektron workarea and gave a brief overview of your options.
This time around, I’m going to show how to configure your Visual Studio Solution and projects and IIS to get you started.
You will need:
 A standard Ektron cms400min workarea website (I usually just call mine /Web – and copy directly from a fresh cms400min install!</description>
    </item>
    
    <item>
      <title>ASP.Net and Custom Error Pages, an SEO nightmare?</title>
      <link>https://codifice.uk/posts/2010-03-20-aspnet-and-custom-error-pages-seo/</link>
      <pubDate>Sat, 20 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-03-20-aspnet-and-custom-error-pages-seo/</guid>
      <description>It’s a (conscientious) developer’s worst fear:
 You’ve slaved long and hard to produce a top-notch, blistering fast website that fully shows off your coding prowess and skills, you unveil the website to critical acclaim and universal client approval (imagine the cheering crowds) but then out-of-hours the database server fails!&amp;nbsp; Yerrk!
All the developer’s are out celebrating a successful so no-one notices the log file growing bigger and bigger, screaming to be heard….</description>
    </item>
    
    <item>
      <title>Mmmmm… clean, sweet WCF proxy usage with TidyProxy!</title>
      <link>https://codifice.uk/posts/2010-03-20-mmmmm-clean-sweet-wcf-proxy-usage/</link>
      <pubDate>Sat, 20 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-03-20-mmmmm-clean-sweet-wcf-proxy-usage/</guid>
      <description>Everyone knows (hopefully) how WCF has made multi-tiered application development easier and cleaner.&amp;nbsp; You get nicely generated client proxies that reuse common libraries straight out of Visual Studio – no more having to convert between your DTOs and the Web Service DTOs.&amp;nbsp; They even implement IDisposable - you can just wrap them in using statements and you’re good to go!&amp;nbsp; How neat is that!
1: using (var proxy = new TidyProxy&amp;lt;SomeWCFServiceClient&amp;gt;()) 2: { 3: proxy.</description>
    </item>
    
  </channel>
</rss>