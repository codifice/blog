<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>globalization on Codifice</title>
    <link>https://codifice.uk/tags/globalization/</link>
    <description>Recent content in globalization on Codifice</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 28 Jun 2010 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://codifice.uk/tags/globalization/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Convert Accented Characters to Simple Characters</title>
      <link>https://codifice.uk/posts/2010-06-28-convert-accented-characters-to-simple/</link>
      <pubDate>Mon, 28 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-06-28-convert-accented-characters-to-simple/</guid>
      <description>I recently needed a way to replace accented characters with simple english ones to allow more readable friendly urls. I&#39;m sure there are plenty of Danes out there who are sick of seeing their language butchered by UrlEncode.&amp;nbsp; After bit of reading up, it seems .Net 2.0 does 99% of the heavy lifting for you:
1: //using System.Text;  2:&amp;nbsp;   3: /// &amp;lt;summary&amp;gt;  4: /// Replaces Accented Characters with Closest Equivalents  5: /// &amp;lt;/summary&amp;gt;  6: /// &amp;lt;param name=&#34;</description>
    </item>
    
    <item>
      <title>Ektron 8.01: PlatformNotSupportedException – Tracking Down and Fixing Another Multilingual Gotcha!</title>
      <link>https://codifice.uk/posts/2010-06-15-ektron-801-platformnotsupportedexceptio/</link>
      <pubDate>Tue, 15 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-06-15-ektron-801-platformnotsupportedexceptio/</guid>
      <description>I’m still tracing though issues after upgrading to 8.01, this time looking at why requests for static files are return 500 - Internal Server Errors when French is selected, but not English. Hmm.
Looking at the Event Logs shows lots of errors like this:
1: Exception type: PlatformNotSupportedException   2:&amp;nbsp;   3: Exception message: The DefaultHttpHandler.BeginProcessRequest method is not   4: supported by IIS integrated pipeline mode.    This is telling me that I’m trying to serve a file via the IIS 7 Integrated Pipeline using a handler that’s specifically designed for IIS 6 (or IIS Classic Pipeline).</description>
    </item>
    
    <item>
      <title>Ektron 8.0.1: Fixing New Handlers Multilingual Bug</title>
      <link>https://codifice.uk/posts/2010-06-14-ektron-801-fixing-new-handlers/</link>
      <pubDate>Mon, 14 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-06-14-ektron-801-fixing-new-handlers/</guid>
      <description>I recently had to upgrade an multilingual Ektron project and all went relatively well.&amp;nbsp; However, whilst debugging the site – I noticed that we were getting a lot of Formatting Exceptions when running the site in French (fr-FR) but not English (en-GB).&amp;nbsp; I tracked this down to the new ‘workarea/csslib/ektronCss.ashx’ and ‘workarea/java/ektronJs.ashx’ handlers and in particular around the mechanism for parsing the ‘If-Modified-Since’ header:
1: public class ektronCss : IHttpHandler {  2:   3: public void ProcessRequest (HttpContext context)   4: {  5: // Ommitted for clarity until line 19   6: CultureInfo provider = CultureInfo.</description>
    </item>
    
    <item>
      <title>Educating Clients About The Way the Web Works</title>
      <link>https://codifice.uk/posts/2010-04-05-educating-clients-about-way-web-works/</link>
      <pubDate>Mon, 05 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-04-05-educating-clients-about-way-web-works/</guid>
      <description>Craig’s pointed out an interesting discussion about managing client expectations (that kicked off from a very preachy design article) around the final display of a website across browsers.&amp;nbsp;&amp;nbsp; This sort of discussion has been around for a while now and I think clients are starting to wise up to browser display issues.
Personally, I’m fairly indifferent about how most websites look provided they behave as I expect don’t actively get in my way.</description>
    </item>
    
  </channel>
</rss>