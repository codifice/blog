<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tuning on Codifice</title>
    <link>https://codifice.uk/tags/tuning/</link>
    <description>Recent content in tuning on Codifice</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 16 Dec 2010 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://codifice.uk/tags/tuning/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ektron: High Indexing Service Processor Usage (Potential) Fix</title>
      <link>https://codifice.uk/posts/2010-12-16-ektron-high-indexing-service-processor/</link>
      <pubDate>Thu, 16 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-12-16-ektron-high-indexing-service-processor/</guid>
      <description>One of our larger client Ektron sites has had a history of poor performance that always seemed to be related to Indexing immediately after publishing content or syncing content to the live environment.&amp;nbsp; The site heavily uses indexed smart form fields and indexed metadata fields for ordering/sorting lists of content.
The symptoms were:
 High CIDAEMON processor usage (95-100% of a processor core)  Total Documents to Index in Indexing Service Manager getting stuck  Indexing Service ‘Service Too Busy’ exceptions  Analysing Crash Dumps of the CIDAEMON process shows the ‘hot’ thread stuck in the QLXFilter.</description>
    </item>
    
    <item>
      <title>SQL: Cleaning Up After the Database Tuning Engine Advisor</title>
      <link>https://codifice.uk/posts/2010-11-01-sql-cleaning-up-after-database-tuning/</link>
      <pubDate>Mon, 01 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-11-01-sql-cleaning-up-after-database-tuning/</guid>
      <description>I’ve recently had to do a quick bit of DB performance analysis work on a 3rd Party database to see if I can improve performance(without being too invasive).&amp;nbsp; The quickest way to do this, is using the Database Tuning Engine Advisor tool that comes with SQL 2008 (the best way is to have loads of experience and a tonne of time to properly analyse the database). Part of my analysis procedure was to make a script of queries that I could run with and without the DTA recommended indexes to evaluate any real world improvement.</description>
    </item>
    
  </channel>
</rss>