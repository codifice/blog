<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>caching on Codifice</title>
    <link>https://codifice.uk/tags/caching/</link>
    <description>Recent content in caching on Codifice</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 03 Nov 2010 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://codifice.uk/tags/caching/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Performance: Applying Output Cache Policies to a User Controls</title>
      <link>https://codifice.uk/posts/2010-11-03-performance-applying-output-cache/</link>
      <pubDate>Wed, 03 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-11-03-performance-applying-output-cache/</guid>
      <description>One of the great features in ASP.NET is the rich caching framework.&amp;nbsp; I particularly like being able to:
 Define caching policies in the configuration file and then assigning those policies to groups of pages (via the @@OutputCache directive).  Cache User Control output for reuse on multiple pages (Partial Page Caching)   What I don’t like is the fact that you can’t combine the two!&amp;nbsp; You have to hard code your user control cache directives either in the mark-up (as @@OutputCache directive) or by applying an attribute (System.</description>
    </item>
    
    <item>
      <title>Enabling Concurrent Logins in Ektron</title>
      <link>https://codifice.uk/posts/2010-04-16-enabling-concurrent-logins-in-ektron/</link>
      <pubDate>Fri, 16 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://codifice.uk/posts/2010-04-16-enabling-concurrent-logins-in-ektron/</guid>
      <description>For one of our major clients we needed a semi-secure area – you needed credentials to view the content within, but there was only one set of credentials.&amp;nbsp;&amp;nbsp; This meant that multiple users could access the site concurrently with the same credentials and this is a bit of a problem for the Ektron security model as it’s based around a one session per login model.
This model is enforced by a unique integer that is generated on login and persisted in the database (in [dbo].</description>
    </item>
    
  </channel>
</rss>